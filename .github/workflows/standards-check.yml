name: Standards Consistency Check

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  standards-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: Check for trailing whitespace
      run: |
        echo "Checking for trailing whitespace..."
        if grep -r '[[:space:]]$' --include="*.md" --include="*.yml" --include="*.yaml" .; then
          echo "❌ Found trailing whitespace in the files above"
          echo "Fix with: find . -name '*.md' -o -name '*.yml' -o -name '*.yaml' | xargs sed -i 's/[[:space:]]*$//' "
          exit 1
        else
          echo "✅ No trailing whitespace found"
        fi

    - name: Check for consistent line endings
      run: |
        echo "Checking for consistent line endings..."
        if find . -name "*.md" -o -name "*.yml" -o -name "*.yaml" | xargs file | grep CRLF; then
          echo "❌ Found Windows line endings (CRLF) in the files above"
          echo "Fix with: find . -name '*.md' -o -name '*.yml' -o -name '*.yaml' | xargs dos2unix"
          exit 1
        else
          echo "✅ All files use Unix line endings (LF)"
        fi

    - name: Validate YAML files
      run: |
        echo "Validating YAML syntax..."
        find . -name "*.yml" -o -name "*.yaml" | while read file; do
          echo "Checking $file"
          python3 -c "import yaml; yaml.safe_load(open('$file'))" || {
            echo "❌ Invalid YAML syntax in $file"
            exit 1
          }
        done
        echo "✅ All YAML files have valid syntax"

    - name: Check for hardcoded personal paths
      run: |
        echo "Checking for hardcoded personal paths..."
        if grep -r "/home/[^/]*/" --include="*.md" --exclude-dir=".git" . | grep -v "/home/user" | grep -v "example"; then
          echo "❌ Found hardcoded personal paths in the files above"
          echo "Replace with \$HOME or /home/user examples"
          exit 1
        else
          echo "✅ No hardcoded personal paths found"
        fi

    - name: Check for consistent markdown formatting
      run: |
        echo "Checking markdown formatting consistency..."
        
        # Check for consistent header spacing
        if find . -name "*.md" -exec grep -l "^##[^ ]" {} \; | head -1; then
          echo "❌ Found headers without space after ##"
          echo "Fix: ensure space after ## in headers"
          exit 1
        fi
        
        # Check for consistent list formatting  
        if find . -name "*.md" -exec grep -l "^-[^ ]" {} \; | head -1; then
          echo "❌ Found lists without space after -"
          echo "Fix: ensure space after - in lists"
          exit 1
        fi
        
        echo "✅ Markdown formatting is consistent"

    - name: Check copilot-upstream.md completeness
      run: |
        echo "Checking copilot-upstream.md has required sections..."
        required_sections=(
          "CRITICAL SAFETY" 
          "Key Rules"
          "Never"
          "Pull Requests"
        )
        
        missing_sections=()
        for section in "${required_sections[@]}"; do
          if ! grep -q "$section" .github/copilot-upstream.md; then
            missing_sections+=("$section")
          fi
        done
        
        if [ ${#missing_sections[@]} -ne 0 ]; then
          echo "❌ Missing required sections in copilot-upstream.md:"
          printf '%s\n' "${missing_sections[@]}"
          exit 1
        else
          echo "✅ All required sections present in copilot-upstream.md"
        fi
